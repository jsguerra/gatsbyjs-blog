/*!
 * joseguerra-uk
 * Just a personal design for my domain
 * https://joseguerra.uk
 * @author Jose Guerra
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
/*!
 * Bootstrap Reboot v4.1.3 (https://getbootstrap.com/)
 * Copyright 2011-2018 The Bootstrap Authors
 * Copyright 2011-2018 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * Forked from Normalize.css, licensed MIT (https://github.com/necolas/normalize.css/blob/master/LICENSE.md)
 */*,:after,:before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:rgba(0,0,0,0)}@-ms-viewport{width:device-width}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;font-size:1rem;font-weight:400;color:#212529;text-align:left;background-color:#fff}[tabindex="-1"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0}address{font-style:normal;line-height:inherit}address,dl,ol,ul{margin-bottom:1rem}dl,ol,ul{margin-top:0}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#0056b3;text-decoration:underline}a:not([href]):not([tabindex]),a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{border-style:none}img,svg{vertical-align:middle}svg{overflow:hidden}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}@font-face{font-family:icomoon;src:url(fonts/icomoon.eot?hspmpw);src:url(fonts/icomoon.eot?hspmpw#iefix) format("embedded-opentype"),url(fonts/icomoon.ttf?hspmpw) format("truetype"),url(fonts/icomoon.woff?hspmpw) format("woff"),url(fonts/icomoon.svg?hspmpw#icomoon) format("svg");font-weight:400;font-style:normal}[class*=" icon-"],[class^=icon-]{font-family:icomoon!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-blog:before{content:"\e904"}.icon-profile:before{content:"\e923"}.icon-email:before{content:"\e945"}.icon-user:before{content:"\e976"}.icon-portfolio:before{content:"\e9ae"}.icon-github:before{content:"\eab0"}.icon-linkedin:before{content:"\eaca"}

/*! helpers - functions v0.0.1 */
/*! helpers - utility v0.0.1 */.compartment{position:relative;margin:0 auto;max-width:41.17647em;max-width:43.75rem}body{font-family:Open Sans,sans-serif;font-size:17px;line-height:1.5;color:#24292e;background:linear-gradient(135deg,#1e5799,#7db9e8)}h1,h2,h3,h4,h5,h6{font-family:Raleway,sans-serif;font-weight:600}.profile-header{position:relative;padding:40px 20px 10px;text-align:center;background-color:#9491d1;background:linear-gradient(90deg,#6562b1,#a5a2ea,#6562b1);background-size:200%;background-position:0;animation:a 10s linear infinite}.profile-header .profile-image img{border-radius:100%;box-shadow:0 0 0 8px hsla(0,0%,100%,.2);transition:box-shadow .5s ease-in-out}.profile-header .profile-image img:hover{box-shadow:0 0 0 12px hsla(0,0%,100%,.6)}.profile-header h1{margin-bottom:0}.profile-header .profile-social{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;position:absolute;top:20px;right:10px}.profile-header .profile-social,.profile-header .profile-social ul{margin:0;padding:0;list-style:none}.profile-header .profile-social li{margin:0;padding:0;margin-right:.625rem}.profile-header .profile-social a{color:#fff;text-decoration:none}.profile-header .profile-social a:hover{color:#24292e}@keyframes a{to{background-position:200%}}.main{margin:0}@media (min-width:600px){.main{margin:3.125rem auto}}.container{max-width:700px;margin:0 auto;overflow:hidden}@media (min-width:600px){.container{border-radius:10px;box-shadow:0 0 5px 0 rgba(0,0,0,.25)}}.bio-section{background-color:#f2f5f8}.site-footer{font-size:.82353em;text-align:center;padding:10px 0 0}@media (min-width:600px){.site-footer{padding:20px 0;margin-bottom:20px}}.site-nav{background-color:#827fc9}.site-nav ul,.site-nav ul ul{margin:0;padding:0;list-style:none}.site-nav ul li{margin:0;padding:0}.nav-tabs{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;overflow:auto}.nav-tabs li{transition:.5s ease}.nav-tabs .active,.nav-tabs li:hover{background-color:#706dc1;box-shadow:0 0 5px 0 rgba(0,0,0,.25)}.nav-tabs .active a{color:#fff}.nav-tabs a{font-family:Open Sans,sans-serif;font-size:.75rem;display:inline-block;color:#eaecef;padding:.625rem 20px;text-align:center;text-transform:uppercase}.nav-tabs a:focus,.nav-tabs a:hover{color:#fff;text-decoration:none}.nav-tabs .glyph:before{font-family:icomoon!important;speak:none;font-size:1.3125rem;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;margin-bottom:.25rem}.nav-tabs .user:before{content:"\e976"}.nav-tabs .profile:before{content:"\e923"}.nav-tabs .portfolio:before{content:"\e9ae"}.nav-tabs .blog:before{content:"\e904"}.profile-body{display:-ms-flexbox;display:flex;overflow:hidden;background-color:#fff}.tab-panel{display:none;padding:20px}@media (min-width:600px){.tab-panel{padding:40px 50px 20px}}.tab-panel.active{display:inline}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
